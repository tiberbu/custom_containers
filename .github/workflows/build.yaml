name: Build Image

  
on:
  push:
    branches:
      - master

  repository_dispatch:

  workflow_dispatch:
    inputs:
      image:
        description: Image name
        type: string
      version:
        description: Image version tag
        type: string
      frappe-repo:
        description: Frappe repo
        type: string
      frappe-version:
        description: Frappe branch
        type: string
      py-version:
        description: Python version
        type: string
      nodejs-version:
        description: NodeJS version
        type: string
      apps-json-base64:
        description: base64 encoded string of apps.json
        type: string
      context:
        description: kaniko context
        type: string
      dockerfile:
        description: dockerfile path from context
        type: string
      registry-user:
        description: user name
        required: false

    secrets:
      REGISTRY_PASSWORD:
        description: registry password
        required: false
    
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
        description: "'erpnext' or 'frappe'"
      version:
        required: true
        type: string
        description: "Major version, git tags should match 'v{version}.*'; or 'develop'"
      push:
        required: true
        type: boolean
      python_version:
        required: true
        type: string
        description: Python Version
      node_version:
        required: true
        type: string
        description: NodeJS Version
    

env:
  TOKEN: ${{ secrets.TOKEN }}
  IMAGE_NAME: ${{ inputs.image }}
  IMAGE_VERSION: ${{ inputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest-m
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean Git Cache
        run: git clean -ffdx && git reset --hard
        
      # The default disk size of these runners is ~14GB, this is not enough to run the e2e tests.
      # Cleanup the disk, see upstream discussion https://github.com/actions/runner-images/issues/2840.
      - name: Cleanup Disk Space
        run: |
          echo "Before removing files:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "After removing files:"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Run Python Script to Update JSON
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          python ci/script.py

      - name: Source Build Env
        id: source-build-env
        run: |
          cat ./ci/build.env >> $GITHUB_ENV
          echo "VERSION=$(cat ./ci/version.txt)" >> $GITHUB_ENV
          echo "APPS_JSON_BASE64=$(base64 -w 0 ./ci/apps.json)" >> $GITHUB_ENV
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_KEY }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 2400
      
      - name: Build and push Docker image with Kaniko
        uses: int128/kaniko-action@v1
        with:
          push: true
          cache: false
          kaniko-args: |
            --build-arg=FRAPPE_PATH=${{ inputs.frappe-repo || env.FRAPPE_REPO }}
            --build-arg=FRAPPE_BRANCH=${{ inputs.frappe-version || env.FRAPPE_VERSION }}
            --build-arg=PYTHON_VERSION=${{ inputs.py-version || env.PY_VERSION }}
            --build-arg=NODE_VERSION=${{ inputs.nodejs-version || env.NODEJS_VERSION }}
            --build-arg=APPS_JSON_BASE64=${{ inputs.apps-json-base64 || env.APPS_JSON_BASE64 }}
            --context=${{ inputs.context || env.CONTEXT }}
            --destination=registry.digitalocean.com/lonius/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
            --dockerfile=${{ inputs.dockerfile || env.DOCKERFILE }}
